"use strict";

// 0 Создать числовой массив и проинициализировать его (*случайными числами).
// Не использовать методы перебора массивов (forEach, filter, map, some, every)
const arr = [1, 2, 3, 0, 4, 5, 13, 22, 0, 32, 67, 65, 0, 10, 20, 100];
console.log(arr);
// 1 Удалить последний элемент из массива, добавить по элементу в начало и конец.
console.log(arr.pop());
console.log(arr);

arr.unshift(21);
console.log(arr);

arr.push(40);
console.log(arr);

// 2 Вывести размер массива.
console.log("Длина массива:", arr.length);

// 3 Вывести элементы с четными индексами.

for (let i = 0; i < arr.length; i++) {
  if (i % 2 === 0) {
    console.log("Элементы с четными индексами.>>", arr[i]);
  }
}

// 4 Вывести только четные элементы (четные числа делятся на 2 без остатка).
for (let i = 0; i < arr.length; i++) {
  if (arr[i] % 2 === 0) {
    console.log("Четные числа", arr[i]);
  }
}
// 5 Вывести индексы нулевых элементов (элемент равен нулю).
const indexes = [];
let index = arr.indexOf(0);

while (index != -1) {
  indexes.push(index);
  index = arr.indexOf(0, index + 1);
}
console.log(indexes);
// 6 Подсчитать количество нулевых элементов.

let nullElement = 0;
for (let i = 0; i < arr.length; ++i) {
  if (arr[i] === 0) nullElement++;
}
console.log(nullElement);

// Методы перебора массивов (forEach, filter, map, some, every).
// 7 Получить новый массив из заданного, который будет содержать только ненулевые числа (-1, 5, 0, 9, -10 => -1, 5, 9, -10).
// 8 Получить новый массив их заданного, который будет содержать все элементы исходного, возведенные в квадрат (-1, 5, 0, 9, -10 => 1, 25, 0, 81, 100).
// 9 Проверить, являются ли все элементы массива четными числами (* или простыми числами).
// 10 Проверить, есть ли в массиве хоть один отрицательный элемент.
// 11 Вывести элементы массива, возведенные в куб.

// *12 Реализовать для MyArray
// - метод shift или unshift,
// - один из методов filter/map/some/every
